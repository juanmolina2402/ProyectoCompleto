@model ADSProject.Models.Grupos

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Grupo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="_operacion" value="@ViewData["Operacion"]" />
    <input type="hidden" id="_redirectURL" value='@Url.Action("Index", "Grupos")' />
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.IdCarrera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdCarrera, new SelectList(ViewBag.Carrera, "Id", "Nombre"), "[Seleccione una opción]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCarrera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idMateria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idMateria, new SelectList(ViewBag.Materia, "id", "Nombre"), "[Seleccione una opción]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idMateria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idProfesor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idProfesor, new SelectList(ViewBag.Profesor, "id", "Nombres"), "[Seleccione una opción]", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idProfesor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ciclo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ciclo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ciclo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.anio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.anio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.anio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index", new { }, new { @class = "btn btn-default btn-sm" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {
            // Cuando la operación es Ver, entonces se deben desabilitar los controles del formulario.
            if ($("#_operacion").val() == "Ver") {
                $("form").find("input, select").attr("disabled", true);
            }
            //Agregamos a los formularios la clase form-ajax
            //La cual activa el formulario para trabajar con Ajax
            $("form").addClass("form-ajax");
            //Activamos Ajax
            initAjaxForm();

            $("#IdCarrera").change(cargarMaterias);

            $("#IdCarrera").trigger("change");
        });

        function cargarMaterias() {
            cargarDataCombobox('@Url.Action("CargarMaterias", "Grupos")?IdCarrera=' + $("#IdCarrera").val(), $("#idMateria"));
        }

        function cargarDataCombobox(URL, cmb) {
            $.ajax({
                url: URL,
                headers: {
                    'Accept': "application/json; charset=utf-8"
                },
                beforeSend: function () {
                    console.log("Iniciando petición...");
                },
                success: function (data) {
                    var valorSeleccionado = $("#idMateria").val();
                    cmb.html("<option value=''>[Seleccione una opción]</option>");
                    $.each(data, function (index, item) {
                        if (valorSeleccionado == item.Id) {
                            cmb.append(`<option selected value=${item.id}>${item.nombre}</option>`);
                        } else {
                            cmb.append(`<option value=${item.id}>${item.nombre}</option>`);
                        }
                    });
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("Ocurrió un error en la petición.");
                },
                complete: function () {
                    console.log("Petición completada.");
                },
                type: "GET",
                contentType: false,
                processData: false,
                async: true,
                cache: false
            });
        }

    </script>
}